;
; based on .nasm source file generated by soptcc.pl from c_stdio_medium_fopen.c
; Compile to i386 ELF .o object: nasm -O999999999 -w+orphan-labels -f elf -o c_stdio_medium_fdopen.o c_stdio_medium_fdopen.nasm
;

bits 32
%ifdef CONFIG_I386
cpu 386
%else
cpu 686  ; cmovne.
%endif

global mini_fdopen
%ifdef CONFIG_SECTIONS_DEFINED
%elifidn __OUTPUT_FORMAT__, bin
section .text align=1
section .rodata align=1
section .data align=1
section .bss align=1
mini___M_discard_buf equ +0x12345679
mini___M_global_file_bufs equ +0x1234567a
mini___M_global_files equ +0x1234567b
mini___M_global_files_end equ +0x1234567c
mini___M_start_flush_opened equ +0x1234567d
%else
extern mini___M_discard_buf
extern mini___M_global_file_bufs
extern mini___M_global_files
extern mini___M_global_files_end
extern mini___M_start_flush_opened
section .text align=1
section .rodata align=1
section .data align=1
section .bss align=1
%endif

section .text
mini_fdopen:  ; FILE *mini_fdopen(int fd, const char *mode);
; TODO(pts): Remove code duplication with mini_fopen(...).
		push edi
		push esi
		push ebx
		mov eax, [esp+0x14]  ; Argument mode.
		mov dl, [eax]
		cmp dl, 'w'
		sete bl
		cmp dl, 'a'
		sete cl
		or bl, cl
		mov edi, mini___M_global_file_bufs
		mov esi, mini___M_global_files
.3:		cmp esi, mini___M_global_files_end
		jne .3c
		xor esi, esi  ; No free slot in mini___M_global_files.
		jmp short .1
.3c:		cmp byte [esi+0x14], 0x0
		jne .4
		mov eax, [esp+0x10]  ; Argument fd.
.5:		cmp bl, 0x1
		sbb edx, edx
		and dl, -0x3
		mov [esi+0x18], edi
		add dl, 0x4
		add edi, 0x1000
		mov [esi+0x10], eax
		mov [esi+0x14], dl
		mov dword [esi+0x20], 0x0
		mov [esi+0x4], edi
		mov [esi+0x1c], edi
		push esi
		call mini___M_discard_buf
		pop eax
		jmp short .1
.4:		add esi, byte 0x24
		add edi, 0x1000
		jmp short .3
.1:		pop ebx
		mov eax, esi
		pop esi
		pop edi
		ret

%ifdef CONFIG_PIC  ; Already position-independent code.
%endif

; __END__
