;
; based on .nasm source file generated by soptcc.pl from c_stdio_medium_fgetc.c
; optimized by pts@fazekas.hu at Mon Nov 11 19:18:27 CET 2024
; Compile to i386 ELF .o object: nasm -O999999999 -w+orphan-labels -f elf -o c_stdio_medium_fgetc.o c_stdio_medium_fgetc.nasm
;
; Code size: 0x31 bytes.
;

bits 32
cpu 386

global mini_getc
global mini_fgetc
global mini_getc_RP3
global mini_fgetc_RP3
%ifdef CONFIG_SECTIONS_DEFINED
%elifidn __OUTPUT_FORMAT__, bin
section .text align=1
section .rodata align=1
section .data align=1
section .bss align=1
mini_fread equ +0x12345678
%else
extern mini_fread
section .text align=1
section .rodata align=1
section .data align=1
section .bss align=1
%endif

section .text

mini_getc:  ; int mini_getc(FILE *stream);
mini_fgetc:  ; int mini_fgetc(FILE *stream);
		mov eax, [esp+4]  ; Argument stream.
		; Fall through to mini_fgetc_RP3.
mini_getc_RP3:  ; int mini_getc_RP3(FILE *stream) __attribute__((__regparm__(3)));
mini_fgetc_RP3:  ; int mini_fgetc_RP3(FILE *stream) __attribute__((__regparm__(3)));
		; TODO(pts): With smart.nasm, omit the mini_fgetc(...) code if not used, saving 4 bytes above.
		mov edx, [eax+0x8]
		cmp edx, [eax+0xc]
		je .1
		inc dword [eax+8]
		movzx eax, byte [edx]
		inc edx
		ret
.1:		push byte 0  ; Return string, zero-initialized.
		mov edx, esp
		push eax  ; stream.
		push byte 1
		push byte 1
		push edx  ; Address of return string.
		call mini_fread
		add esp, byte 0x10
		test eax, eax
		jz .err
		pop eax
		ret
.err:		pop eax  ; Clean up return string.
		or eax, byte -1
		ret

%ifdef CONFIG_PIC  ; Already position-independent code.
%endif

; __END__
