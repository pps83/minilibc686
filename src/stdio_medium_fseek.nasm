;
; based on .nasm source file generated by soptcc.pl from c_stdio_medium_fseek.c
; Compile to i386 ELF .o object: nasm -O999999999 -w+orphan-labels -f elf -o c_stdio_medium_fseek.o c_stdio_medium_fseek.nasm
;

bits 32
cpu 386

global mini_fseek
%ifdef CONFIG_SECTIONS_DEFINED
%elifidn __OUTPUT_FORMAT__, bin
section .text align=1
section .rodata align=1
section .data align=1
section .bss align=1
mini___M_discard_buf equ +0x12345678
mini_fflush equ +0x12345679
mini_lseek equ +0x1234567a
%else
extern mini___M_discard_buf
extern mini_fflush
extern mini_lseek
section .text align=1
section .rodata align=1
section .data align=1
section .bss align=1
%endif

section .text

mini_fseek:
		push edi
		push esi
		push ebx
		mov ebx, [esp+0x10]
		mov esi, [esp+0x14]
		mov edi, [esp+0x18]
		mov al, [ebx+0x14]
		lea edx, [eax-0x1]
		cmp dl, 0x2
		ja .2
		cmp edi, byte 1
		jne .3
		mov eax, [ebx+0x8]
		sub eax, [ebx+0x18]
		add eax, [ebx+0x20]
		mov [ebx+0x20], eax
		add esi, eax
		xor edi, edi
.3:		push ebx
		call mini___M_discard_buf
		pop ecx
		jmp short .4
.2:		cmp al, 0x3
		ja .5
.7:		or eax, byte -1
		jmp short .1
.5:		push ebx
		call mini_fflush
		pop edx
		test eax, eax
		jne .7
.4:		push edi
		push esi
		push dword [ebx+0x10]
		call mini_lseek
		add esp, byte 0xc
		cmp eax, byte -1
		je .7
		mov [ebx+0x20], eax
		xor eax, eax
.1:		pop ebx
		pop esi
		pop edi
		ret

%ifdef CONFIG_PIC  ; Already position-independent code.
%endif

; __END__
