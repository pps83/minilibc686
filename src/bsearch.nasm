;
; based on .nasm source file generated by soptcc.pl at Tue Nov 19 19:33:52 CET 2024
; based on dietlibc-0.34/lib/bsearch.c
; Compile to i386 ELF .o object: nasm -O999999999 -w+orphan-labels -f elf -o bsearch.o bsearch.nasm
;
; Code size: 0x40 bytes.
;
; Uses: %ifdef CONFIG_PIC
;

bits 32
cpu 386

global mini_bsearch
%ifdef CONFIG_SECTIONS_DEFINED
%elifidn __OUTPUT_FORMAT__, bin
section .text align=1
section .rodata align=4
section .data align=4
section .bss align=4
%else
section .text align=1
section .rodata align=1
section .data align=1
section .bss align=1
%endif

section .text
mini_bsearch:  ; void *mini_bsearch(const void *key, const void *base, size_t nmemb, size_t size, int (*compar)(const void*, const void*));
		push ebp
		mov ebp, esp
		push edi
		push esi
		push ebx
		mov esi, [ebp+0x10]
.2:		test esi, esi
		je short .4
		mov edi, esi
		shr edi, 1
		mov ebx, [ebp+0x14]
		imul ebx, edi
		add ebx, [ebp+0xc]
		push ebx  ; b.
		push dword [ebp+0x8]  ; a.
		call [ebp+0x18]  ; Call copar(a, b).
		pop edx  ; Clean up argument a above from the stack.
		pop ecx  ; Clean up argument b above from the stack.
		test eax, eax
		js short .3
		je short .1
		add ebx, [ebp+0x14]
		mov [ebp+0xc], ebx
		dec esi
		sub esi, edi
		mov edi, esi
.3:		mov esi, edi
		jmp short .2
.4:		xor ebx, ebx
.1:		xchg eax, ebx  ; EAX := EBX; EBX := junk.
		pop ebx
		pop esi
		pop edi
		pop ebp
		ret

%ifdef CONFIG_PIC  ; Already position-independent code.
%endif

; __END__
