;
; based on .nasm source file generated by soptcc.pl from c_stdio_medium_fread.c
; Compile to i386 ELF .o object: nasm -O999999999 -w+orphan-labels -f elf -o c_stdio_medium_fread.o c_stdio_medium_fread.nasm
;

bits 32
cpu 386

global mini_fread
%ifdef CONFIG_SECTIONS_DEFINED
%elifidn __OUTPUT_FORMAT__, bin
section .text align=1
section .rodata align=1
section .data align=1
section .bss align=1
mini_read equ +0x12345678
mini___M_discard_buf equ +0x12345679
%else
extern mini_read
extern mini___M_discard_buf
section .text align=1
section .rodata align=1
section .data align=1
section .bss align=1
%endif

section .text

mini_fread:  ; size_t mini_fread(void *ptr, size_t size, size_t nmemb, FILE *stream);
		push ebp
		mov ebp, esp
		push ebx
		push edi
		push esi
		mov ebx, [ebp+0x10]
		imul ebx, [ebp+0xc]
		xor eax, eax
		test ebx, ebx
		je .6
		mov edi, [ebp+0x14]
		mov cl, [edi+0x14]
		dec cl
		cmp cl, 0x2
		ja .6
		mov esi, [ebp+0x8]
.3:		mov eax, [edi+0x8]
		mov ecx, [edi+0xc]
		cmp eax, ecx
		jne .4
		sub ecx, [edi+0x18]
		add [edi+0x20], ecx
		push edi
		call dword mini___M_discard_buf
		add esp, byte 4
		mov eax, [edi+0x4]
		mov ecx, [edi+0x18]
		sub eax, ecx
		push eax
		push ecx
		push dword [edi+0x10]
		call dword mini_read
		add esp, byte 0xc
		lea ecx, [eax+0x1]
		cmp ecx, byte 2
		jb .5
		add [edi+0xc], eax
		jmp short .3
.4:		lea ecx, [eax+0x1]
		mov [edi+0x8], ecx
		mov al, [eax]
		mov [esi], al
		inc esi
		dec ebx
		jne .3
.5:		sub esi, [ebp+0x8]
		xor edx, edx
		mov eax, esi
		div dword [ebp+0xc]
.6:		pop esi
		pop edi
		pop ebx
		pop ebp
		ret

%ifdef CONFIG_PIC  ; Already position-independent code.
%endif

; __END__
